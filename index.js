

//asdasdasdsad
function checkBrackets (str) { //функция проверки скобок как в 1 лабе
  let bracketsArr = []; //массив скобок

  for (let i = 0; i < str.length; i++) { //проходимся по строке и собираем из нее только скобки
    if(str[i] === '(' || str[i] === ')')
      bracketsArr.push(str[i])
  }

  const stack = []; //создаем массив

  for (let i = 0; i < bracketsArr.length; i++) { //создаем цикл для обхода массива собранных скобок
    if (bracketsArr[i] === ')') { //если скобка закрывающаяся, то сверхы stack должна лежать открывающася скобка
      if ('(' !== stack.pop()) return false; //если сверху stack не открывающаяся скобка, то возвращаем false
    } else {
      stack.push(bracketsArr[i]); //иначе если скобка не закрывающаяся добавляем ее в stack
    }
  }

  return stack.length === 0; //в конце возвращаем true или false в зависимости от того, оказался ли stack в конце нулевым
}

function calculate(str) {
  if(!checkBrackets(str)) //запускаем функцию проверки скобок, и если скобки расставлены неверно
    throw 'В выражении неверно расставлены скобки.'; //возвращаем ошибку

  const sumOrSub = (sub, a, sign, b) => { //функция для сложения или вычитания в зависимости от полученного знака
    return sign === "-" ? a-b : +a + +b;
  }

  const multOrDiv = (sub, a, sign, b) => { //умножение и деление в зависимости от знака
    if(sign === '*') {
      return a*b;
    } else {
      if(b === '0'){ //если пытаются поделить на ноль, то возвращаем ошибку
        throw 'Деление на 0 запрещено.';
      }
      return a/b;
    }
  }

  const pow = (sub, a, b) => { //возведение в степень
    return Math.pow(a, b);
  }

  let matchPower = /(-?[\d\.]+)\s*\^\s*(-?[\d\.]+)/g; //регулярное выражение для проверки на возведение в степени
  let matchMultDiv = /(-?[\d\.]+)\s*([\*\/])\s*(-?[\d\.]+)/g; //регулярное выражение для проверки на умножение или деление
  let matchSumDiff = /(-?[\d\.]+)\s*([\+-])\s*(-?[\d\.]+)/g; //регулярное выражение для проверки на сложение или вычитание

  const getValue = (sub, exp) => { //функция для вычисления

    while(exp.indexOf("^") !== -1) //если все еще присутствует возведение в степень
      exp = exp.replace(matchPower, pow); //тогда возводим в степень, ищем это место по регулярному выражению

    while(matchMultDiv.test(exp)) //если присутствует умножение или деление в строке
      exp = exp.replace(matchMultDiv, multOrDiv); //заменяем место умножения/деления на вычисленное значение

    while(matchSumDiff.test(exp)) //если присутствует сложение или вычитание в строке
      exp = exp.replace(matchSumDiff, sumOrSub); //заменяем место сложения/вычитания на вычисленное значение

    return exp; //когда все вычислили, возвращаем нашу строку - это итоговое значение

  }

  while(str.indexOf("(") !== -1) { //пока в нашем строке присутствует открывающаяся скобка
    str = str.replace(/\(([^\(\)]*)\)/g, getValue); //мы заменяем самое глубокое выражение в скобках (с помощью регулярного выражения) на getValue
  }

  return getValue('', str); //запускаем функцию подсчета
}



console.log(calculate('2+7*(3/9)-5')) //вводим наше выражение и запускаем вычисление
